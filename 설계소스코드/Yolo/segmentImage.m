function [BW,maskedImage] = segmentImage(RGB)
%segmentImage 영상 분할기 앱에서 자동 생성된 코드를 사용하여 영상 분할
%  [BW,MASKEDIMAGE] = segmentImage(RGB) 구문은 영상 분할기 앱에서 자동 생성된 코드를 사용하여 영상
%  RGB을(를) 분할합니다. 최종 분할은 BW로 반환되고, 마스크 처리된 영상은 MASKEDIMAGE로 반환됩니다.

% Auto-generated by imageSegmenter app on 14-Nov-2023
%----------------------------------------------------


% RGB 영상을 L*a*b* 컬러스페이스로 변환합니다.
X = rgb2lab(RGB);

% 그래프 절단
foregroundInd = [2389554 2389612 2389632 2389637 2389646 2389651 2389656 2419418 2419452 2419462 2419719 2419744 2434403 2434413 2434418 2434748 2449364 2449792 2461355 2461817 2491355 2506355 2536865 2566870 2578296 2593287 2593291 2593889 2608899 2608904 2668919 2683924 2725248 2740238 2740938 2755233 2755938 2785233 2785938 2929170 2929962 2944165 2959165 2959962 3019136 3031121 3031962 3031967 3046121 3046967 3076112 3076967 3106967 3121092 3178063 3178068 3193972 3238972 3294995 3295000 3309990 3310972 3324975 3325972 3381893 3396941 3397972 3411932 3513893 3528893 3543883 3543893 3616977 3630854 3660854 3675849 3676977 3691977 3732834 3763977 3777820 3807820 3835977 3894747 3952977 3967977 4041713 4057977 4068747 4113737 4128674 4129977 4170732 4171977 4185674 4186977 4200674 4261977 4287723 4332674 4347723 4362674 4393977 4405977 4464713 4465977 4494723 4551713 4626698 4639972 4683708 4699972 4714972 4728703 4755713 4857708 4872708 4902708 4917708 4990962 5004703 5019703 5049703 5064703 5080962 5137962 5151698 5152962 5196698 5208698 5223698 5224962 5239962 5299962 5340698 5415698 5416953 5427698 5442689 5442698 5443948 5457689 5487689 5503948 5604684 5634684 5649684 5707948 5721674 5736674 5751674 5793674 5809948 5853674 5883674 5925674 5926948 5956948 5971948 6042674 6043948 6072674 6073948 6087674 6102674 6115948 6160948 6175948 6246674 6247948 6306674 6321674 6364948 6438674 6453674 6465674 6481948 6510674 6525674 6555674 6582674 6597674 6598953 6612674 6627674 6672674 6684674 6685953 6699674 6745962 6801679 6816684 6906703 6918713 6919962 6948723 6963723 6994962 7036962 7051962 7110771 7125776 7125781 7140786 7182795 7182800 7197800 7197820 7198962 7212820 7213962 7284854 7314859 7344893 7402953 7431971 7489005 7489014 7504014 7534014 7549014 7579943 7606029 7621938 7636938 7696938 7723928 7768073 7768077 7768087 7798924 7828919 7840102 7840919 7930136 7930141 7942150 7942865 7972846 7972855 7987744 7987748 7987753 7987768 7987807 8002233 8002248 8002257 8002267 8002272 8002282 8002598 8002607 8002627 8002676 8017287 8017408 8017428 8017432 8017437 8017462 ];
backgroundInd = [51504 108504 124209 226170 255504 414489 444489 489484 663455 738445 810431 825927 882421 969873 1060116 1075116 1101392 1116392 1176382 1176795 1191382 1263771 1278382 1279112 1320372 1350372 1351112 1366112 1497732 1498102 1542358 1554732 1569348 1644343 1645063 1656343 1657029 1657039 1686338 1687024 1701338 1702112 1731338 1761771 1773776 1773922 1788844 1788868 1788893 1863338 1879112 1935338 1951112 1980338 2170457 2170476 2200501 2200515 2214324 2215442 2227549 2227554 2242588 2242598 2272622 2287710 2287724 2287758 2287768 2301975 2302773 2302792 2317403 2317807 2343319 2343966 2344826 2359389 2359394 2359841 2373314 2374379 2374389 2374851 2434359 2434889 2434894 2448309 2449340 2449345 2449904 2461330 2490893 2505309 2505873 2506311 2521282 2521953 2535309 2536267 2536962 2536967 2566972 2593992 2608218 2638996 2654011 2667781 2668189 2668194 2739295 2740160 2741026 2741035 2756035 2799723 2800126 2812121 2826285 2828045 2858050 2872102 2930050 2943285 2945050 2959063 2959068 2960050 2974063 3046005 3090990 3092040 3105990 3107040 3120270 3122040 3147951 3149040 3177917 3179040 3192261 3192917 3224035 3237893 3252251 3254035 3294868 3309868 3339567 3371035 3398035 3471830 3483533 3483830 3513825 3528202 3528825 3543820 3545026 3600800 3615489 3615504 3617026 3632026 3690761 3707021 3749021 3777723 3807713 3822713 3834708 3896011 3909076 3909684 3924679 3926011 3951674 3983011 4026042 4026674 4041674 4043011 4056674 4098411 4098674 4128664 4245397 4319011 4347387 4364011 4392674 4419650 4479650 4494659 4568011 4638650 4640011 4653650 4683358 4683650 4700011 4715011 4785348 4787011 4845640 4847011 4857635 4917630 4949011 4974630 4989343 4989630 5004630 5006001 5021001 5051001 5079338 5079625 5091625 5166338 5168001 5210001 5285001 5313343 5315011 5340625 5370625 5442625 5444011 5517625 5519011 5532625 5534011 5561011 5591011 5661348 5661630 5721635 5736635 5751635 5853635 5868358 6012635 6027358 6042630 6074011 6104011 6116011 6174625 6176011 6248011 6291625 6308011 6365011 6378616 6440011 6465606 6480606 6540358 6582601 6597601 6627358 6629011 6672601 6684358 6686011 6699601 6833011 6893011 6906616 6948616 6963625 6993630 6995011 7065635 7097011 7125650 7127011 7167382 7169011 7182752 7197761 7197771 7269397 7269795 7284795 7329795 7359416 7488820 7533431 7564987 7651972 7696967 7711962 7752883 7767893 7768962 7782893 7782898 7783962 7827917 7828953 7854479 7855948 7870948 7899946 7929975 7930355 7930359 7930389 7930408 7942437 7942452 7971990 7972316 7986990 8002525 8002938 8017291 8047554 8059267 8059559 8074257 8089029 8089039 8089914 8089919 8149063 8149194 8149199 8149209 8149627 8149899 8164063 8164646 8191087 8191889 8206116 8206121 8206889 8221700 8221744 8221748 8221792 8221817 8221841 8221855 8367509 9756484 9945479 9975479 10210019 10251406 10326382 10572368 10779358 10851343 11070314 11217285 11436188 11655124 ];
L = superpixels(X,60100,'IsInputLab',true);

% L*a*b* 범위를 [0 1]로 변환
scaledX = prepLab(X);
BW = lazysnapping(scaledX,L,foregroundInd,backgroundInd);

% Create masked image.
maskedImage = RGB;
maskedImage(repmat(~BW,[1 1 3])) = 0;
end

function out = prepLab(in)

% Convert L*a*b* image to range [0,1]
out = in;
out(:,:,1) = in(:,:,1) / 100;  % L range is [0 100].
out(:,:,2) = (in(:,:,2) + 86.1827) / 184.4170;  % a* range is [-86.1827,98.2343].
out(:,:,3) = (in(:,:,3) + 107.8602) / 202.3382;  % b* range is [-107.8602,94.4780].

end
